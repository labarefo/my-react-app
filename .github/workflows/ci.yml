name: CI
on:
  pull_request:
    branches: [ develop, master ]
  push:
    branches: [ develop, master ]

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      SURGE_LOGIN: ${{ secrets.SURGE_LOGIN }}
      SURGE_TOKEN: ${{ secrets.SURGE_TOKEN }}
    permissions:
      contents: write # to be able to publish a GitHub release
      issues: write # to be able to comment on released issues
      pull-requests: write # to be able to comment on released pull requests
      id-token: write # to enable use of OIDC for npm provenance
    steps:
    - uses: actions/checkout@v3.5.3

    - name: Cache node modules
      uses: actions/cache@v3.3.1
      with:
        path: ~/.npm
        key: ${{ runner.OS }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.OS }}-node-  

    - name: use NodeJs
      uses: actions/setup-node@v1
      with:
        node-version: '18.x'

    - name: install dependencies
      run: npm install

    - name: Prettier check
      run: npm run prettier:check
    - name: Coverage
      run: npm test -- --coverage
      env:
        CI: true

    - name: Upload Test Coverage
      uses: actions/upload-artifact@v3.1.2
      with:
        name: code-coverage
        path: coverage

    - name: Build Project
      if: github.event_name == 'push'
      run: npm run build

    - name: Upload Build
      if: github.event_name == 'push'
      uses: actions/upload-artifact@v3.1.2
      with:
        name: build
        path: build

    - name: ZIP Assets
      if: github.event_name == 'push' && github.ref == 'refs/heads/master'
      run: |
        zip -r build.zip ./build
        zip -r coverage.zip ./coverage

    - name: Create a release
      if: github.event_name == 'push' && github.ref == 'refs/heads/master'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      run: npx semantic-release

    - name: Deploy to Staging
      if: github.event_name == 'push' && github.ref == 'refs/heads/develop'
      run: npx surge --project ./build --domain https://my-react-app-staging.surge.sh

    - name: Deploy to Production
      if: github.event_name == 'push' && github.ref == 'refs/heads/master'
      run: npx surge --project ./build --domain https://my-react-app-prod.surge.sh

